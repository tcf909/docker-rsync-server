#!/usr/bin/env bash
[[ "${DEBUG,,}" == "true" ]] && set -x

#RSYNC_SERVER_ALLOW="${RSYNC_SERVER_ALLOW:-10.0.0.0/255.0.0.0 100.0.0.0/255.192.0.0 172.16.0.0/255.255.0.0 192.168.0.0/255.255.255.0 127.0.0.1/255.255.255.255}"
RSYNC_SERVER_USER="${RSYNC_SERVER_USER:-nobody}"
RSYNC_SERVER_GROUP="${RSYNC_SERVER_GROUP:-nogroup}"
RSYNC_SERVER_CONF_PATH="${RSYNC_SERVER_CONF_PATH:-/etc/rsync/rsync.conf}"
RSYNC_SERVER_SECRETS_PATH="${RSYNC_SERVER_SECRETS_PATH:-/etc/rsync/rsync.secrets}"
RSYNC_SERVER_AUTH_USERS="${RSYNC_SERVER_AUTH_USERS:-rsync}"
RSYNC_SERVER_AUTH_SECRETS="${RSYNC_SERVER_AUTH_SECRETS:-rsync:rsync}"
#RSYNC_SERVER_DEFAULT_OPTIONS="${RSYNC_SERVER_DEFAULT_OPTIONS:-''}"
#RSYNC_SERVER_VOLUME_0,1,2,3,4,...(volume_name|/local/path/in/fs

PREFIX="RSYNC_SERVER"
NOUN="VOLUME"

[[ -z "$(eval "echo \$${PREFIX}_${NOUN}_0")" ]] && exit 0

mkdir -p /etc/rsync

# create users matching ids passed if necessary
[[ "${RSYNC_SERVER_GROUP}" != "nogroup" ]] && groupadd -r ${RSYNC_SERVER_GROUP}
[[ "${RSYNC_SERVER_USER}" != "nobody" ]] && useradd -r ${RSYNC_SERVER_USER} -g ${RSYNC_SERVER_GROUP}

if [ ! -f ${RSYNC_SERVER_CONF_PATH} ]; then

    CONF_DIR=$(dirname ${RSYNC_SERVER_CONF_PATH})

    [[ ! -d ${CONF_DIR} ]] && mkdir -p ${CONF_DIR}

    cat << EOF > ${RSYNC_SERVER_CONF_PATH}
uid = ${RSYNC_SERVER_USER}
gid = ${RSYNC_SERVER_GROUP}
use chroot = yes
pid file = /var/run/rsyncd.pid
log file = /dev/stdout
EOF

    echo -e "${RSYNC_SERVER_AUTH_SECRETS}" > "${RSYNC_SERVER_SECRETS_PATH}"

    chmod 600 "${RSYNC_SERVER_SECRETS_PATH}"

    COUNT=0
    while [[ true ]]; do

        #########################
        ## START STANDARD LOOP ##
        #########################
        MOUNT=$(eval "echo \$${PREFIX}_${NOUN}_$COUNT")
        MOUNT_NAME="\$${PREFIX}_${NOUN}_$COUNT"
        OPTIONS=$(eval "echo \$${PREFIX}_${NOUN}_${COUNT}_OPTIONS")
        #DEFAULT_OPTIONS=$(eval "echo \$${PREFIX}_DEFAULT_OPTIONS")

        #Increment count here so continue cmds later on don't cause infinite loop
        ((COUNT++))

        [[ -z "${MOUNT}" ]] && break

        IFS='|' read -r MOUNT_REMOTE MOUNT_LOCAL MOUNT_ENSURE_TYPE <<< "${MOUNT}"

        [[ -z "${MOUNT_REMOTE}" ]] && echo "Missing remote path for ${MOUNT_NAME}. Skipping." && continue

        [[ -z "${MOUNT_LOCAL}" ]] && echo "Missing local path for ${MOUNT_NAME}. Skipping." && continue

        [[ -e ${MOUNT_LOCAL} ]] && [[ ! -d ${MOUNT_LOCAL} ]] && echo "(${MOUNT_LOCAL}) already exists and is not a directory." && continue

        [[ ! -d ${MOUNT_LOCAL} ]] && mkdir -p ${MOUNT_LOCAL} && chown ${RSYNC_SERVER_USER}:${RSYNC_SERVER_GROUP} -R ${MOUNT_LOCAL}

        #[[ -z "$OPTIONS" ]] && OPTIONS="${DEFAULT_OPTIONS}"

        cat << EOF >> ${RSYNC_SERVER_CONF_PATH}

[${MOUNT_REMOTE}]
    auth users = ${RSYNC_SERVER_AUTH_USERS}
    secrets file = ${RSYNC_SERVER_SECRETS_PATH}
    read only = false
    path = ${MOUNT_LOCAL}
    comment = ${MOUNT_REMOTE}
    refuse options = delete
EOF

    done;

    chmod 600 ${RSYNC_SERVER_CONF_PATH}

    mkdir -p /etc/service/rsync_server

    cat << EOF > /etc/service/rsync_server/run
#!/usr/bin/env bash
exec /usr/bin/rsync --no-detach --daemon --config ${RSYNC_SERVER_CONF_PATH} -v
EOF
    chmod +x /etc/service/rsync_server/run

fi

